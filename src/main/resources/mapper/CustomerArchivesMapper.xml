<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honest.sdms.system.dao.CustomerArchivesMapper">
  <resultMap id="BaseResultMap" type="com.honest.sdms.system.entity.CustomerArchives">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="item_specific_id" jdbcType="BIGINT" property="itemSpecificId" />
    <result column="customer_specific_code" jdbcType="VARCHAR" property="customerSpecificCode" />
    <result column="is_valid" jdbcType="CHAR" property="isValid" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="last_updated_by" jdbcType="VARCHAR" property="lastUpdatedBy" />
    <result column="last_updated_date" jdbcType="TIMESTAMP" property="lastUpdatedDate" />
    <result column="organization_id" jdbcType="BIGINT" property="organizationId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customer_id, item_specific_id, customer_specific_code, is_valid, created_by, 
    created_date, last_updated_by, last_updated_date, organization_id
  </sql>
  <sql id="Base_Where">
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
	  <if test="customerSpecificCode != null and customerSpecificCode != '' ">
        and customer_specific_code = #{customerSpecificCode,jdbcType=VARCHAR}
      </if>
      <if test="itemSpecificId != null">
        and item_specific_id = #{itemSpecificId,jdbcType=BIGINT}
      </if>
      <if test="customerId != null">
        and customer_id = #{customerId,jdbcType=BIGINT}
      </if>
      <if test="isValid != null and isValid != '' ">
        and is_valid = #{isValid,jdbcType=VARCHAR}
      </if>
      <if test="organizationId != null">
        and organization_id = #{organizationId,jdbcType=BIGINT}
      </if>
	</trim>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_archives
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="getCustomerArchivesByCustomerId" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />,
    (select item from item_specific sc where sc.id = item_specific_id and sc.organization_id = organization_id ) as item,
    (select item_id from item_specific sc where sc.id = item_specific_id and sc.organization_id = organization_id ) as itemId,
    (select specific_code from item_specific sc where sc.id = item_specific_id and sc.organization_id = organization_id) as specificCode
    from customer_archives
    where customer_id = #{customerId,jdbcType=BIGINT} and organization_id = #{organizationId,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from customer_archives
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.honest.sdms.system.entity.CustomerArchives">
    insert into customer_archives (id, customer_id, item_specific_id, 
      customer_specific_code, is_valid, created_by, 
      created_date, last_updated_by, last_updated_date, 
      organization_id)
    values (#{id,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{itemSpecificId,jdbcType=BIGINT}, 
      #{customerSpecificCode,jdbcType=VARCHAR}, #{isValid,jdbcType=CHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=VARCHAR}, #{lastUpdatedDate,jdbcType=TIMESTAMP}, 
      #{organizationId,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.honest.sdms.system.entity.CustomerArchives">
    update customer_archives
    set customer_id = #{customerId,jdbcType=BIGINT},
      item_specific_id = #{itemSpecificId,jdbcType=BIGINT},
      customer_specific_code = #{customerSpecificCode,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=CHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
      last_updated_date = #{lastUpdatedDate,jdbcType=TIMESTAMP},
      organization_id = #{organizationId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>