<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honest.sdms.system.dao.SysUserMapper">
	<resultMap id="BaseResultMap"
		type="com.honest.sdms.system.entity.SysUser">
		<id column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="login_name" jdbcType="VARCHAR" property="loginName" />
		<result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
		<result column="telephone" jdbcType="VARCHAR" property="telephone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="is_valid" jdbcType="CHAR" property="isValid" />
		<result column="created_by" jdbcType="VARCHAR" property="createdBy" />
		<result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
		<result column="last_updated_by" jdbcType="VARCHAR" property="lastUpdatedBy" />
		<result column="last_updated_date" jdbcType="TIMESTAMP" property="lastUpdatedDate" />
		<result column="organization_id" jdbcType="BIGINT" property="organizationId" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, login_name, login_password, user_name, sex, phone_number, telephone, email,
		is_valid, created_by, created_date, last_updated_by, last_updated_date, organization_id
	</sql>
	<sql id="Base_Where">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="loginName != null and loginName != ''">
				and login_name = #{loginName,jdbcType=VARCHAR}
			</if>
			<if test="loginPassword != null">
				and login_password = #{loginPassword,jdbcType=VARCHAR}
			</if>
			<if test="userName != null and userName != ''">
				and user_name LIKE CONCAT('%',#{userName},'%')
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				and phone_number = #{phoneNumber,jdbcType=VARCHAR}
			</if>
			<if test="telephone != null and telephone != ''">
				and telephone = #{telephone,jdbcType=VARCHAR}
			</if>
			<if test="email != null">
				and email = #{email,jdbcType=VARCHAR}
			</if>
			<if test="isValid != null">
				and is_valid = #{isValid,jdbcType=CHAR}
			</if>
			<if test="organizationId != null">
				and organization_id = #{organizationId,jdbcType=BIGINT}
			</if>
		</trim>
	</sql>
	<select id="count" parameterType="com.honest.sdms.system.entity.SysUser" resultType="java.lang.Integer">
		select count(1) from from sys_user
		<include refid="Base_Where"/>
	</select>
	<select id="findByCond"
		parameterType="com.honest.sdms.system.entity.SysUser"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		<include refid="Base_Where"/>
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_user
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.honest.sdms.system.entity.SysUser">
		insert into sys_user (user_id, login_name, login_password,
		user_name, sex, phone_number,
		telephone, email, is_valid,
		created_by, created_date, last_updated_by,
		last_updated_date, organization_id)
		values (#{userId,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR},
		#{loginPassword,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{phoneNumber,jdbcType=VARCHAR},
		#{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{isValid,jdbcType=CHAR},
		#{createdBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=VARCHAR},
		#{lastUpdatedDate,jdbcType=TIMESTAMP},
		#{organizationId,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective"
		parameterType="com.honest.sdms.system.entity.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="loginName != null and loginName != ''">
				login_name,
			</if>
			<if test="loginPassword != null">
				login_password,
			</if>
			<if test="userName != null and userName != ''">
				user_name,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				phone_number,
			</if>
			<if test="telephone != null and telephone != ''">
				telephone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="isValid != null">
				is_valid,
			</if>
			<if test="createdBy != null">
				created_by,
			</if>
			<if test="createdDate != null">
				created_date,
			</if>
			<if test="lastUpdatedBy != null">
				last_updated_by,
			</if>
			<if test="lastUpdatedDate != null">
				last_updated_date,
			</if>
			<if test="organizationId != null">
				organization_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="loginName != null and loginName != ''">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPassword != null">
				#{loginPassword,jdbcType=VARCHAR},
			</if>
			<if test="userName != null and userName != ''">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=CHAR},
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				#{phoneNumber,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null and telephone != ''">
				#{telephone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="isValid != null">
				#{isValid,jdbcType=CHAR},
			</if>
			<if test="createdBy != null">
				#{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdatedBy != null">
				#{lastUpdatedBy,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatedDate != null">
				#{lastUpdatedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="organizationId != null">
				#{organizationId,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.honest.sdms.system.entity.SysUser">
		update sys_user
		<set>
			<if test="loginName != null and loginName != ''">
				login_name = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPassword != null">
				login_password = #{loginPassword,jdbcType=VARCHAR},
			</if>
			<if test="userName != null and userName != ''">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=CHAR},
			</if>
			<if test="phoneNumber != null and phoneNumber != ''">
				phone_number = #{phoneNumber,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null and telephone != ''">
				telephone = #{telephone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=CHAR},
			</if>
			<if test="createdBy != null">
				created_by = #{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="createdDate != null">
				created_date = #{createdDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdatedBy != null">
				last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdatedDate != null">
				last_updated_date = #{lastUpdatedDate,jdbcType=TIMESTAMP},
			</if>
			<if test="organizationId != null">
				organization_id = #{organizationId,jdbcType=BIGINT},
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.honest.sdms.system.entity.SysUser">
		update sys_user
		set login_name = #{loginName,jdbcType=VARCHAR},
		login_password = #{loginPassword,jdbcType=VARCHAR},
		user_name = #{userName,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=CHAR},
		phone_number = #{phoneNumber,jdbcType=VARCHAR},
		telephone = #{telephone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		is_valid = #{isValid,jdbcType=CHAR},
		created_by = #{createdBy,jdbcType=VARCHAR},
		created_date = #{createdDate,jdbcType=TIMESTAMP},
		last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
		last_updated_date = #{lastUpdatedDate,jdbcType=TIMESTAMP},
		organization_id = #{organizationId,jdbcType=BIGINT}
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
</mapper>